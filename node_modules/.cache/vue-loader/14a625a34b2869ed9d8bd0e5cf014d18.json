{"remainingRequest":"C:\\Users\\fynns\\Documents\\GitHub\\Modul291\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\fynns\\Documents\\GitHub\\Modul291\\09a_Client+Server\\01_Intro\\client\\src\\components\\Validate.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\fynns\\Documents\\GitHub\\Modul291\\09a_Client+Server\\01_Intro\\client\\src\\components\\Validate.vue","mtime":1655499187976},{"path":"C:\\Users\\fynns\\Documents\\GitHub\\Modul291\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655049539621},{"path":"C:\\Users\\fynns\\Documents\\GitHub\\Modul291\\node_modules\\babel-loader\\lib\\index.js","mtime":1655049539352},{"path":"C:\\Users\\fynns\\Documents\\GitHub\\Modul291\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655049539621},{"path":"C:\\Users\\fynns\\Documents\\GitHub\\Modul291\\node_modules\\vue-loader\\lib\\index.js","mtime":1655049605646}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHJlcXVpcmVkLCBudW1lcmljLCBhbHBoYSwgZW1haWwgfSBmcm9tICd2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMnCmltcG9ydCB7bWFwU3RhdGV9IGZyb20gInZ1ZXgiCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdWYWxpZGF0ZScsCiAgICBjb21wdXRlZDogbWFwU3RhdGUoWyd2YWxpZGF0ZSddKSwKCiAgICBkYXRhOiAoKSA9PiAoewogICAgICAgIG5hbWU6ICcnLAogICAgICAgIGVtYWlsczogJycsCiAgICAgICAgYWRkcmVzczonJywKICAgICAgICBvcnQ6JycsCiAgICAgICAgcGx6OicnLAogICAgfSksCiAgICB2YWxpZGF0aW9uczogewogICAgICAgIG5hbWU6IHtyZXF1aXJlZCwgYWxwaGF9LAogICAgICAgIGVtYWlsczoge3JlcXVpcmVkLCBlbWFpbH0sCiAgICAgICAgYWRkcmVzczoge3JlcXVpcmVkfSwKICAgICAgICBvcnQ6IHtyZXF1aXJlZH0sCiAgICAgICAgcGx6OiB7cmVxdWlyZWQsIG51bWVyaWN9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIHN1Ym1pdEZvcm0oKSB7CiAgICAgICAgICAgIHRoaXMuJHYuJHRvdWNoKCk7CiAgICAgICAgICAgIGlmKCF0aGlzLiR2LiRpbnZhbGlkKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgTmFtZTogJHt0aGlzLm5hbWV9LCBFbWFpbDogJHt0aGlzLmVtYWlsc30sIGFkZHJlc3M6ICR7dGhpcy5hZGRyZXNzfSwgb3J0OiAke3RoaXMub3J0fSwgcGx6OiAke3RoaXMucGx6fSBgKQogICAgICAgICAgICB9OwogICAgICAgIH0KICAgIH0KIH0K"},{"version":3,"sources":["Validate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Validate.vue","sourceRoot":"09a_Client+Server/01_Intro/client/src/components","sourcesContent":["<template>\r\n    <div>\r\n        <h2>Jetzt Validieren</h2>\r\n        <form @submit.prevent=\"submitForm\">\r\n            <div class=\"form-group\">\r\n                <label> Name</label>\r\n                <input type=\"text\" v-model=\"name\" class=\"form-control\">\r\n                <span v-if=\"!$v.name.required && $v.name.$dirty\" class=\"text-danger\"> Name is required!</span>\r\n                <span v-if=\"!$v.name.alpha && $v.name.$dirty\" class=\"text-danger\"> Name must be alphabetic!</span>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label> Email</label>\r\n                <input type=\"text\" v-model=\"emails\" class=\"form-control\">\r\n                <span v-if=\"(!$v.emails.required || !$v.emails.email) && $v.emails.$dirty\" class=\"text-danger\"> Valid email is required!</span>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label> Adresse </label>\r\n                <input type=\"text\" v-model=\"address\" class=\"form-control\">\r\n                <span v-if=\"!$v.address.required && $v.address.$dirty\" class=\"text-danger\"> Address is required!</span>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label> Ort </label>\r\n                <input type=\"text\" v-model=\"ort\" class=\"form-control\">\r\n                <span v-if=\"!$v.ort.required && $v.ort.$dirty\" class=\"text-danger\"> Ort is required!</span>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label> PLZ </label>\r\n                <input type=\"text\" v-model=\"plz\" class=\"form-control\">\r\n                <span v-if=\"(!$v.plz.required || !$v.plz.numeric) && $v.plz.$dirty\" class=\"text-danger\"> Valid PLZ is required!</span>\r\n            </div>\r\n            <input type=\"submit\" class=\"btn btn-primary\">\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import { required, numeric, alpha, email } from 'vuelidate/lib/validators'\r\n    import {mapState} from \"vuex\"\r\n    export default {\r\n        name: 'Validate',\r\n        computed: mapState(['validate']),\r\n\r\n        data: () => ({\r\n            name: '',\r\n            emails: '',\r\n            address:'',\r\n            ort:'',\r\n            plz:'',\r\n        }),\r\n        validations: {\r\n            name: {required, alpha},\r\n            emails: {required, email},\r\n            address: {required},\r\n            ort: {required},\r\n            plz: {required, numeric}\r\n        },\r\n        methods: {\r\n            submitForm() {\r\n                this.$v.$touch();\r\n                if(!this.$v.$invalid) {\r\n                    console.log(`Name: ${this.name}, Email: ${this.emails}, address: ${this.address}, ort: ${this.ort}, plz: ${this.plz} `)\r\n                };\r\n            }\r\n        }\r\n     }\r\n</script>"]}]}